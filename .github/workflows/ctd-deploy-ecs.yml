on:
  workflow_call:
    inputs:
      app-name:
        type: string
        required: true
        description: The name of the app, as used for the ECS cluster
      environment:
        type: string
        required: true
        description: E.g. 'prod' or 'dev', to concatenate with app for ECS service
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      docker-repo:
        required: true
      slack-webhook:
        required: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    concurrency: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v2
      - uses: mbta/actions/build-push-ecr@v1
        id: build-push
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          docker-repo: ${{ secrets.docker-repo }}
      - uses: mbta/actions/deploy-ecs@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          ecs-cluster: ${{ inputs.app-name }}
          ecs-service: ${{ inputs.app-name }}-${{ inputs.environment }}
          docker-tag: ${{ steps.build-push.outputs.docker-tag }}
      - uses: mbta/actions/notify-slack-deploy@v1
        if: ${{ !cancelled() }}
        with:
          webhook-url: ${{ secrets.slack-webhook }}
          job-status: ${{ job.status }}
