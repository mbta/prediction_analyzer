<%= render(PredictionAnalyzerWeb.PartialsView, "header.html", assigns) %>
<div class="row accuracy-summary-header">
  <div class="col-xs-6" id="prod-accuracy-total">
    <span class="prod-text prod-text-header">Prod</span>
    <div>
      <span class="accuracy-summary-percentage prod-text">
        <%= accuracy_percentage(@prod_num_accurate, @prod_num_predictions) %>
      </span>
      <span class="accuracy-summary-percent-sign prod-text">
        %
      </span>
    </div>
    <div class="prod-text">
      <em>Err: <%= Float.round(@prod_mean_error || 0.0, 2) %>, RMSE: <%= Float.round(@prod_rmse || 0.0, 2) %></em> <br>
      From <%= @prod_num_accurate %> accurate out of <%= @prod_num_predictions %> total predictions
    </div>
    <div id='reminder-text'>
      <div id='reminder-text-shown' class='reminder-text'>
        <div class=reminder-text-button>
          <a href="#reminder-text-hidden" class="nav-tab nav-tab-active">Hide</a>
        </div>
        <p>
          A snapshot of all predictions is taken once per minute. Each prediction is matched to its corresponding
          actual arrival or departure time based on the vehicle ID and GTFS trip ID, and passes or fails the
          accuracy standard based on the below bins. If no match is found for the vehicle ID and GTFS trip ID, the
          prediction is recorded as failing.
        </p>

        <table class="table">
          <tr>
            <th>
              Bin
            </th>
            <th>
              Passing threshold (Actual - Predicted)
            </th>
          </tr>
          <%= for {range, _bin_min, bin_error_min, bin_error_max} <- @bins do %>
            <tr>
              <td>
                <%= range %>
              </td>
              <td>
                <%= bin_error_min %> sec to <%= bin_error_max %> sec
              </td>
            </tr>
          <% end %>
        </table>
      </div>
    </div>
  </div>


  <div class="col-xs-3" id="dev-green-accuracy-total">
    <span class="dev-green-text dev-green-text-header">Dev Green</span>
    <div>
      <span class="accuracy-summary-percentage dev-green-text">
        <%= accuracy_percentage(@dev_green_num_accurate, @dev_green_num_predictions) %>
      </span>
      <span class="accuracy-summary-percent-sign dev-green-text">
        %
      </span>
    </div>
    <div class="dev-green-text">
      <em>Err: <%= Float.round(@dev_green_mean_error || 0.0, 2) %>, RMSE: <%= Float.round(@dev_green_rmse || 0.0, 2) %></em> <br>
      From <%= @dev_green_num_accurate %> accurate out of <%= @dev_green_num_predictions %> total predictions
    </div>
  </div>

  <div class="col-xs-3" id="dev-blue-accuracy-total">
    <span class="dev-blue-text dev-blue-text-header">Dev Blue</span>
    <div>
      <span class="accuracy-summary-percentage dev-blue-text">
        <%= accuracy_percentage(@dev_blue_num_accurate, @dev_blue_num_predictions) %>
      </span>
      <span class="accuracy-summary-percent-sign dev-blue-text">
        %
      </span>
    </div>
    <div class="dev-blue-text">
      <em>Err: <%= Float.round(@dev_blue_mean_error || 0.0, 2) %>, RMSE: <%= Float.round(@dev_blue_rmse || 0.0, 2) %></em> <br>
      From <%= @dev_blue_num_accurate %> accurate out of <%= @dev_blue_num_predictions %> total predictions
    </div>
  </div>
</div>

  <div id='reminder-text-toggle' class="reminder-text-button">
    <div class="nav-tab-wrapper">
      <a href="#reminder-text-shown" class="nav-tab">How is accuracy calculated?</a>
    </div>
  </div>
<hr class="accuracy-separator">

<%= form_for @conn, Routes.accuracy_path(@conn, :index), [as: :filters, method: :get, class: "accuracy-form", id: "accuracy-form"], fn f -> %>
  <%= hidden_input(f, :mode) %>

  <div class="row">
    <div class="col-xs-3">
      <div class="accuracy-form-filters">
        <%= if @error_msg do %>
          <div class="alert alert-danger">
            <%= @error_msg %>
          </div>
        <% end %>

      	<div class="form-group">
      	    <%= explainer_label(f, :route_ids, "Route") %>
      	    <%= select(f, :route_ids, route_options(@mode), class: "form-control") %>
      	</div>

        <%= if f.params["chart_range"] != "By Station" do %>
          <div class="form-group">
            <%= explainer_label(f, :stop_ids, "Stops") %>
            <%= multiple_select(f, :stop_ids, stop_filter_options(@mode), class: "form-control") %>
          </div>
        <% end %>

      	<div class="form-group">
      	  <div>
            <%= explainer_label(f, :direction_id, "Direction ID") %>
          </div>

      	  <%= label class: "radio-inline" do %>
      	    <%= radio_button(f, :direction_id, "0") %> 0
      	  <% end %>

      	  <%= label class: "radio-inline" do %>
      	    <%= radio_button(f, :direction_id, "1") %> 1
      	  <% end %>

      	  <%= label class: "radio-inline" do %>
      	    <%= radio_button(f, :direction_id, "any") %> Any
      	  <% end %>
      	</div>
        <%= if @mode == :subway do %>
          <div class="form-group">
            <%= explainer_label(f, :kinds, "Kinds") %>
            <%= multiple_select(f, :kinds, kind_filter_options(), class: "form-control") %>
          </div>
        <% end %>

        <div class="form-group">
          <%= explainer_label(f, :bin, "Bin") %>
          <%= select(f, :bin, ["All" | bin_options()], class: "form-control") %>
        </div>

        <%= if f.params["chart_range"] == "Hourly" do %>
          <div class="form-group">
            <%= explainer_label(f, :service_date, ["Service Date ", content_tag(:small, "(YYYY-MM-DD)")]) %>
            <%= text_input(f, :service_date, class: "form-control") %>
          </div>

          <div class="form-group">
            <%= explainer_label(f, :timeframe_resolution) %>
            <%= select(f, :timeframe_resolution, time_resolution_options(), selected: "60", class: "form-control") %>
          </div>
        <% else %>
          <div class="form-group">
            <%= explainer_label(f, :date_start, ["Start Date ", content_tag(:small, "(YYYY-MM-DD)")]) %>
            <%= text_input(f, :date_start, class: "form-control") %>
          </div>

          <div class="form-group">
            <%= explainer_label(f, :date_end, ["End Date ", content_tag(:small, "(YYYY-MM-DD)")]) %>
            <%= text_input(f, :date_end, class: "form-control") %>
          </div>
        <% end %>

        <%= if @mode == :subway do %>
            <div class="form-group">
                <%= checkbox(f, :in_next_two, unchecked_value: "") %>
                <%= explainer_label(f, :in_next_two, "Only what riders see in stations") %>
            </div>
        <% end %>

        <div class="form-group">
          <%= submit "Filter", id: "filter-submit-btn", class: "btn btn-default" %>
          <%= submit "Download as CSV", id: "csv-submit-btn", class: "btn btn-default", formaction: "/accuracy/csv" %>

        </div>

      </div>
    </div>
    <div class="col-xs-9">
      <%= render(PredictionAnalyzerWeb.PartialsView, "chart_selection_boxes.html", %{f: f, conn: @conn}) %>
      <div data-prediction-accuracy class="chart" id="chart-prediction-accuracy"></div>
      <br />
    </div>
  </div>

  </br>

  <div class="col-xs-4" id="prod-data-table-col">
    <span class="prod-text prod-text-header">Prod</span>
    <table class="table" id="prod-data-table">
      <tr>
        <th><%= chart_range_scope_header(f.params["chart_range"]) %></th>
        <th class="prod-text">Accuracy</th>
        <th class="prod-text">Err</th>
        <th class="prod-text">RMSE</th>
        <th class="prod-text">Count</th>
      </tr>

      <%= for {[row_scope, prod_total, prod_accurate, prod_err, prod_rmse], _dg, _db} <- @accuracies do %>
        <tr>
          <td><%= formatted_row_scope(@conn.params["filters"], row_scope) %></td>
          <td class="prod-text">
            <%= accuracy_percentage(prod_accurate, prod_total) %>%
          </td>
          <td class="prod-text"><%= Float.round(prod_err || 0.0, 0) %></td>
          <td class="prod-text"><%= Float.round(prod_rmse || 0.0, 0) %></td>
          <td class="prod-text"><%= prod_total %></td>
        </tr>
      <% end %>
    </table>
  </div>

  <div class="col-xs-4" id="dev-green-data-table-col">
    <span class="dev-green-text dev-green-text-header">Dev Green</span>
    <table class="table" id="dev-green-data-table">
      <tr>
        <th><%= chart_range_scope_header(f.params["chart_range"]) %></th>
        <th class="dev-green-text">Accuracy</th>
        <th class="dev-green-text">Err</th>
        <th class="dev-green-text">RMSE</th>
        <th class="dev-green-text">Count</th>
      </tr>

      <%= for {_prod, [row_scope, dg_total, dg_accurate, dg_err, dg_rmse], _db} <- @accuracies do %>
        <tr>
          <td><%= formatted_row_scope(@conn.params["filters"], row_scope) %></td>
          <td class="dev-green-text"><%= accuracy_percentage(dg_accurate, dg_total) %>%</td>
          <td class="dev-green-text"><%= Float.round(dg_err || 0.0, 0) %></td>
          <td class="dev-green-text"><%= Float.round(dg_rmse || 0.0, 0) %></td>
          <td class="dev-green-text"><%= dg_total %></td>
        </tr>
      <% end %>
    </table>
  </div>

  <div class="col-xs-4" id="dev-blue-data-table-col">
    <span class="dev-blue-text dev-blue-text-header">Dev Blue</span>
    <table class="table" id="dev-blue-data-table">
      <tr>
        <th><%= chart_range_scope_header(f.params["chart_range"]) %></th>
        <th class="dev-blue-text">Accuracy</th>
        <th class="dev-blue-text">Err</th>
        <th class="dev-blue-text">RMSE</th>
        <th class="dev-blue-text">Count</th>
      </tr>

      <%= for {_prod, _dev_green, [row_scope, db_total, db_accurate, db_err, db_rmse]} <- @accuracies do %>
        <tr>
          <td><%= formatted_row_scope(@conn.params["filters"], row_scope) %></td>
          <td class="dev-blue-text"><%= accuracy_percentage(db_accurate, db_total) %>%</td>
          <td class="dev-blue-text"><%= Float.round(db_err || 0.0, 0) %></td>
          <td class="dev-blue-text"><%= Float.round(db_rmse || 0.0, 0) %></td>
          <td class="dev-blue-text"><%= db_total %></td>
        </tr>
      <% end %>
    </table>
  </div>
<% end %>

<script>
  window.dataPredictionAccuracyJSON = <%= raw(@chart_data) %>
  // Handle filter reload on CSV download if values changed:
  var form = document.getElementById("accuracy-form");
  var csv_submit = document.getElementById('csv-submit-btn')
  csv_submit.addEventListener('click', function (event) {
    // Stop the default load:
    event.preventDefault()
    // Open CSV download in new tab:
    default_target = form.target
    default_action = form.action
    form.target = "_blank";
    form.action = "/accuracy/csv"
    form.submit()
    // Reload filters:
    form.target = default_target
    form.action = default_action
    form.submit()
  })

</script>
